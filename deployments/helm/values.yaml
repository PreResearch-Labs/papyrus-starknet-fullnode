# Default values for a papyrus deployment.

# The verbosity level of logs ("debug", "info", "error", etc.)
rustLogLevel: "papyrus=DEBUG,starknet_client=DEBUG"

# The Docker image (including any tag and repository name)
image:
  repository: ghcr.io/starkware-libs/papyrus
  tag: 0.1.0-alpha
  pullPolicy: Always

node:
  # Number of concurrent requests to the SN feeder gateway
  concurrent_fg_requests: 10

starknet:
  chain_id: SN_GOERLI # possible values: SN_MAIN, SN_GOERLI
  # feeder-gateway url
  # SN_MAIN: https://alpha-mainnet.starknet.io
  # SN_GOERLI: https://alpha4.starknet.io
  central_url: https://alpha4.starknet.io
  additional_headers: # optional addtional headers for SN communication

# The default resources for the pod.
resources:
  limits:
    cpu: "1"
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Service variables for a papyrus pod.
services:
  # RPC API.
  rpc:
    type: ClusterIP
    port: 8080
    protocol: TCP
  # Monitoring API.
  monitoring:
    type: ClusterIP
    port: 8081
    protocol: TCP

# Persistent volume claim variables for a papyrus pod.
pvc:
  # Recommended size is at least 512Gi.
  size: 1000Gi
  # Is is recommended to use an SSD volume (such as GKE premium-rwo).
  storageClass: "premium-rwo"
  # Use an existing snapshot for the node's data. The kubernetes volumesnapshot object should
  # exist in the same namespace as the rest of the resources.
  restoreFromSnapshot:
    enabled: false
    snapshotName: my-snapshot

# Configure Ingress.
ingress:
  enabled: true
  type: gce
  name: ssl-proxy
  pathType: ImplementationSpecific
  annotations: |
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

# Backup mode
backup:
  enabled: false
  sleep_interval: 6h
  aws:
    s3_bucket_name: my-backup-bucket-name
    s3_bucket_region: my-backup-bucket-region
    access_key_id: my aws_access_key_id
    secret_access_key: my aws_secret_access_key
